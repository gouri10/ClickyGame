{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gouri\\\\Desktop\\\\Assignments\\\\ClickyGame\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport breeds from \"./dogBreeds.json\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Header from \"./components/Header\";\nimport { Col, Row, Container } from \"./components/Grid\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      breeds\n    };\n\n    this.changeClickStatus = id => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      const breedClicked = this.state.breeds.filter(dog => dog.id === id);\n      breedClicked.clicked = true; // Set this.state.friends equal to the new friends array\n\n      this.setState({\n        breeds\n      });\n      this.shuffle(breeds);\n    };\n\n    this.shuffle = breeds => {\n      for (let i = breeds.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        var _ref = [breeds[j], breeds[i]];\n        breeds[i] = _ref[0];\n        breeds[j] = _ref[1];\n      }\n\n      this.setState({\n        breeds\n      });\n    };\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Header, {\n      imageType: \"Choose Your Breed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.state.breeds.map(breed => React.createElement(ImageCard, {\n      changeClickStatus: this.changeClickStatus,\n      id: breed.id,\n      name: breed.name,\n      image: breed.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/gouri/Desktop/Assignments/ClickyGame/client/src/App.js"],"names":["React","Component","ImageCard","breeds","Wrapper","Title","Header","Col","Row","Container","App","state","changeClickStatus","id","breedClicked","filter","dog","clicked","setState","shuffle","i","length","j","Math","floor","random","render","map","breed","name","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,mBAApC;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BU,KAF0B,GAElB;AACNR,MAAAA;AADM,KAFkB;;AAAA,SAM1BS,iBAN0B,GAMNC,EAAE,IAAI;AACxB;AACA,YAAMC,YAAY,GAAG,KAAKH,KAAL,CAAWR,MAAX,CAAkBY,MAAlB,CAAyBC,GAAG,IAAIA,GAAG,CAACH,EAAJ,KAAWA,EAA3C,CAArB;AACAC,MAAAA,YAAY,CAACG,OAAb,GAAuB,IAAvB,CAHwB,CAIxB;;AACA,WAAKC,QAAL,CAAc;AAAEf,QAAAA;AAAF,OAAd;AACA,WAAKgB,OAAL,CAAahB,MAAb;AACD,KAbyB;;AAAA,SAe1BgB,OAf0B,GAefhB,MAAD,IAAY;AACpB,WAAK,IAAIiB,CAAC,GAAGjB,MAAM,CAACkB,MAAP,GAAgB,CAA7B,EAAgCD,CAAC,GAAG,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;AAC1C,cAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AAD0C,mBAEjB,CAACjB,MAAM,CAACmB,CAAD,CAAP,EAAYnB,MAAM,CAACiB,CAAD,CAAlB,CAFiB;AAEzCjB,QAAAA,MAAM,CAACiB,CAAD,CAFmC;AAE9BjB,QAAAA,MAAM,CAACmB,CAAD,CAFwB;AAG3C;;AACD,WAAKJ,QAAL,CAAc;AAAEf,QAAAA;AAAF,OAAd;AACD,KArByB;AAAA;;AAuB1B;AACAuB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKf,KAAL,CAAWR,MAAX,CAAkBwB,GAAlB,CAAsBC,KAAK,IAC1B,oBAAC,SAAD;AACA,MAAA,iBAAiB,EAAE,KAAKhB,iBADxB;AAEA,MAAA,EAAE,EAAEgB,KAAK,CAACf,EAFV;AAGA,MAAA,IAAI,EAAEe,KAAK,CAACC,IAHZ;AAIA,MAAA,KAAK,EAAED,KAAK,CAACE,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CAFA,CADF;AAeD;;AAxCyB;;AA2C5B,eAAepB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport breeds from \"./dogBreeds.json\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Header from \"./components/Header\";\nimport { Col, Row, Container } from \"./components/Grid\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    breeds\n  };\n\n  changeClickStatus = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const breedClicked = this.state.breeds.filter(dog => dog.id === id);\n    breedClicked.clicked = true;\n    // Set this.state.friends equal to the new friends array\n    this.setState({ breeds });\n    this.shuffle(breeds);\n  };\n\n  shuffle = (breeds) => {\n    for (let i = breeds.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [breeds[i], breeds[j]] = [breeds[j], breeds[i]];\n    }\n    this.setState({ breeds });\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Container>\n      <Header imageType=\"Choose Your Breed\"/>\n      <Wrapper>\n        {this.state.breeds.map(breed => (\n          <ImageCard\n          changeClickStatus={this.changeClickStatus}\n          id={breed.id}\n          name={breed.name}\n          image={breed.image}\n        />\n        ))}\n      </Wrapper> \n      </Container>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
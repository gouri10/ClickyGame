{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gouri\\\\Desktop\\\\Assignments\\\\ClickyGame\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport breeds from \"./dogBreeds.json\"; //import { Col, Row, Container } from \"../components/Grid\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      breeds\n    };\n\n    this.changeClickStatus = id => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      const breedClicked = this.state.breeds.filter(dog => dog.id === id);\n      breedClicked.clicked = true; // Set this.state.friends equal to the new friends array\n\n      this.setState({\n        breeds\n      });\n      this.shuffle(breeds);\n    };\n\n    this.shuffle = breeds => {\n      for (let i = breeds.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        var _ref = [breeds[j], breeds[i]];\n        breeds[i] = _ref[0];\n        breeds[j] = _ref[1];\n      }\n\n      this.setState({\n        breeds\n      });\n    };\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (// <Wrapper>\n      //   <Title>Dog Breeds List</Title>\n      this.state.breeds.map(breed => React.createElement(ImageCard, {\n        changeClickStatus: this.changeClickStatus,\n        id: breed.id,\n        name: breed.name,\n        image: breed.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })) // </Wrapper>\n\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/gouri/Desktop/Assignments/ClickyGame/client/src/App.js"],"names":["React","Component","ImageCard","breeds","App","state","changeClickStatus","id","breedClicked","filter","dog","clicked","setState","shuffle","i","length","j","Math","floor","random","render","map","breed","name","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB,C,CACA;;AACA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BI,KAF0B,GAElB;AACNF,MAAAA;AADM,KAFkB;;AAAA,SAM1BG,iBAN0B,GAMNC,EAAE,IAAI;AACxB;AACA,YAAMC,YAAY,GAAG,KAAKH,KAAL,CAAWF,MAAX,CAAkBM,MAAlB,CAAyBC,GAAG,IAAIA,GAAG,CAACH,EAAJ,KAAWA,EAA3C,CAArB;AACAC,MAAAA,YAAY,CAACG,OAAb,GAAqB,IAArB,CAHwB,CAIxB;;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA;AAAF,OAAd;AACA,WAAKU,OAAL,CAAaV,MAAb;AACD,KAbyB;;AAAA,SAe3BU,OAf2B,GAelBV,MAAD,IAAW;AAChB,WAAK,IAAIW,CAAC,GAAGX,MAAM,CAACY,MAAP,GAAgB,CAA7B,EAAgCD,CAAC,GAAG,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;AACxC,cAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AADwC,mBAEf,CAACX,MAAM,CAACa,CAAD,CAAP,EAAYb,MAAM,CAACW,CAAD,CAAlB,CAFe;AAEvCX,QAAAA,MAAM,CAACW,CAAD,CAFiC;AAE5BX,QAAAA,MAAM,CAACa,CAAD,CAFsB;AAG3C;;AACD,WAAKJ,QAAL,CAAc;AAAET,QAAAA;AAAF,OAAd;AACH,KArB2B;AAAA;;AAuB1B;AACAiB,EAAAA,MAAM,GAAG;AACP,WACE;AACA;AACE,WAAKf,KAAL,CAAWF,MAAX,CAAkBkB,GAAlB,CAAsBC,KAAK,IACzB,oBAAC,SAAD;AACE,QAAA,iBAAiB,EAAE,KAAKhB,iBAD1B;AAEE,QAAA,EAAE,EAAEgB,KAAK,CAACf,EAFZ;AAGE,QAAA,IAAI,EAAEe,KAAK,CAACC,IAHd;AAIE,QAAA,KAAK,EAAED,KAAK,CAACE,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAHJ,CAWE;;AAXF;AAaD;;AAtCyB;;AAyC5B,eAAepB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport breeds from \"./dogBreeds.json\";\n//import { Col, Row, Container } from \"../components/Grid\";\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    breeds\n  };\n\n  changeClickStatus = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const breedClicked = this.state.breeds.filter(dog => dog.id === id);\n    breedClicked.clicked=true;\n    // Set this.state.friends equal to the new friends array\n    this.setState({ breeds });\n    this.shuffle(breeds);\n  };\n\n shuffle=(breeds)=> {\n    for (let i = breeds.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [breeds[i], breeds[j]] = [breeds[j], breeds[i]];\n    }\n    this.setState({ breeds });    \n}\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      // <Wrapper>\n      //   <Title>Dog Breeds List</Title>\n        this.state.breeds.map(breed => (\n          <ImageCard\n            changeClickStatus={this.changeClickStatus}\n            id={breed.id}            \n            name={breed.name}\n            image={breed.image}            \n          />\n        ))\n      // </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gouri\\\\Desktop\\\\Assignments\\\\ClickyGame\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport breeds from \"./dogBreeds.json\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Header from \"./components/Header\";\nimport NavBar from \"./components/NavBar\";\nimport { Col, Row, Container } from \"./components/Grid\";\nconst initialdogBreeds = breeds;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      breeds,\n      score: 0,\n      topscore: 15\n    };\n\n    this.changeClickStatus = id => {\n      const breedClicked = this.state.breeds.filter(dog => dog.id === id)[0];\n\n      if (breedClicked.clicked !== true) {\n        breedClicked.clicked = true;\n        this.setState({\n          score: this.state.score + 1\n        });\n      } else {\n        alert(\"You lost the game\");\n        this.setState({\n          score: 0\n        });\n        this.reset();\n      } // Set this.state.friends equal to the new friends array\n\n\n      this.setState({\n        breeds\n      });\n      this.shuffle(this.state.breeds);\n    };\n\n    this.reset = () => this.setState({\n      breeds: initialdogBreeds\n    });\n\n    this.shuffle = breeds => {\n      for (let i = breeds.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        var _ref = [breeds[j], breeds[i]];\n        breeds[i] = _ref[0];\n        breeds[j] = _ref[1];\n      }\n\n      this.setState({\n        breeds\n      });\n    };\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Header, {\n      imageType: \"Choose Your Breed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(NavBar, {\n      score: this.state.score,\n      topscore: this.state.topscore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.state.breeds.map(breed => React.createElement(ImageCard, {\n      changeClickStatus: this.changeClickStatus,\n      id: breed.id,\n      name: breed.name,\n      image: breed.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/gouri/Desktop/Assignments/ClickyGame/client/src/App.js"],"names":["React","Component","ImageCard","breeds","Wrapper","Title","Header","NavBar","Col","Row","Container","initialdogBreeds","App","state","score","topscore","changeClickStatus","id","breedClicked","filter","dog","clicked","setState","alert","reset","shuffle","i","length","j","Math","floor","random","render","map","breed","name","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport breeds from \"./dogBreeds.json\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Header from \"./components/Header\";\nimport NavBar from \"./components/NavBar\";\nimport { Col, Row, Container } from \"./components/Grid\";\n\nconst initialdogBreeds = breeds;\n\nclass App extends Component {  \n\n  // Setting this.state.friends to the friends json array\n  state = {\n    breeds,\n    score:0,\n    topscore:15    \n  };\n\n  changeClickStatus = id => {\n    const breedClicked = this.state.breeds.filter(dog => dog.id === id)[0];\n    if (breedClicked.clicked !== true) {\n      breedClicked.clicked = true;\n      this.setState({ score: this.state.score + 1 });\n    }\n    else {\n      alert(\"You lost the game\");\n      this.setState({ score: 0 });\n      this.reset();\n    }\n    // Set this.state.friends equal to the new friends array\n    this.setState({ breeds });\n    this.shuffle(this.state.breeds);\n  };\n\n  reset=()=> this.setState({breeds:initialdogBreeds});\n\n  shuffle = (breeds) => {\n    for (let i = breeds.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [breeds[i], breeds[j]] = [breeds[j], breeds[i]];\n    }\n    this.setState({ breeds });\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Container>\n        <Header imageType=\"Choose Your Breed\" />\n        <NavBar score={this.state.score} topscore={this.state.topscore} />\n        <Wrapper>\n          {this.state.breeds.map(breed => (\n            <ImageCard\n              changeClickStatus={this.changeClickStatus}\n              id={breed.id}\n              name={breed.name}\n              image={breed.image}\n            />\n          ))}\n        </Wrapper>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}